@model List<Entity.ViewModels.ApartmentVM>


@if (TempData["message"] is not null)
{
    <div class="alert alert-info">@TempData["message"]</div>
}

@{
    List<string> blocks = Model.DistinctBy(a => a.Apartment.BlockName).Select(a => a.Apartment.BlockName).Order().ToList();
}


<h2 class="d-flex justify-content-center mb-4">Apartments List</h2>
@if (Model.Count < 1)
{
    <p class="alert alert-danger"> There is no apartment</p>
}
<div class="d-flex justify-content-between mb-2">
    <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
        <input type="radio" class="btn-check" name="btnradio" id="all" autocomplete="off" checked onclick="getByBlockName('all')">
        <label class="btn btn-outline-primary" for="all">All Blocks</label>

        @foreach (string blockName in blocks)
        {
            <input type="radio" class="btn-check" name="btnradio" id="@blockName" autocomplete="off" onclick="getByBlockName('@blockName')">
            <label class="btn btn-outline-primary" for="@blockName">@blockName</label>
        }
    </div>
    <a class="btn btn-outline-primary" asp-action="Apartment">Add Apartment</a>
</div>
<div id="apartmentList">
    @await Html.PartialAsync("ApartmentsList")
</div>

<script>

    function getByBlockName(blockName) {

        $.post("/Apartment/ApartmentsList?blockName=" + blockName).then(
            function (result) {
                console.log(result);
                $("#apartmentList").html(result);
            }
        );
    }

</script>