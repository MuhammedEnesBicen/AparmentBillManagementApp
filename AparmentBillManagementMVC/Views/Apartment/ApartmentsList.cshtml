@model List<ApartmentVM>

<style>
    .rotate {
        transform: rotate(90deg);
        /* Safari */
        -webkit-transform: rotate(90deg);
        /* Firefox */
        -moz-transform: rotate(90deg);
        /* IE */
        -ms-transform: rotate(90deg);
        /* Opera */
        -o-transform: rotate(90deg);
        /* Internet Explorer */
        filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
        position: absolute;
        right: 0;
        bottom: 40px;
    }
</style>



@if (Model is not null)
{
    <div class="row justify-content-center">
        @if (Model.Count < 1)
        {
            <p class="alert alert-danger m-3 px-2"> There is no apartment</p>
        }
        @foreach (ApartmentVM item in Model)
        {

            <div class="card my-3 mx-3 col-md-6 col-lg-4  col-xl-2 apartmentCard" style="width: 18rem;">
                <div class="card-body d-flex flex-column justify-content-between">
                    <div>
                        <h2 class="card-title">@item.Apartment.BlockName - @item.Apartment.Number</h2>
                        @if (String.IsNullOrEmpty(item.TenantName) == false)
                        {
                            <h6 class="card-subtitle mb-2 text-muted">@item.TenantName</h6>
                        }
                        else
                        {
                            <div class="d-flex justify-content-between align-items-baseline">
                                <h6 class="card-subtitle mb-2 text-success ">No Tenant</h6>
                                <a class="btn btn-outline-success  p-1" asp-controller="Tenant" asp-action="Tenant" asp-route-apartmentId="@item.Apartment.Id"><i class="fa fa-plus"></i> Add Tenant</a>
                            </div>
                        }
                        <p>Floor:  @item.Apartment.Floor</p>
                        <p>Type:  @item.Apartment.Type.ToString()</p>
                        @if (item.DebtAmount > 0)
                        {
                            <p>Debt:  <big class="card-text text-danger">@string.Format("{0:C}",item.DebtAmount)</big></p>
                        }
                        else if (item.DebtAmount == 0)
                        {
                            <p>Debt:  <big class="card-text text-success">@string.Format("{0:C}",item.DebtAmount)</big></p>
                        }

                    </div>
                    <div style="margin-right:40px; bottom:20px">
                        @if(item.TenantId != -1)
                        {
                            <a class="btn btn-success mb-3 w-100" asp-controller="Message" asp-action="Index" asp-route-tenantId="@item.TenantId">
                            <i class="fa fa-envelope"></i> Send Message
                            </a>
                        }
                        else
                        {
                            <a class="btn btn-success mb-3 w-100 disabled" asp-controller="Message" asp-action="Index" asp-route-tenantId="@item.TenantId">
                                <i class="fa fa-envelope"></i> Send Message
                            </a>
                        }

                        <a class="btn btn-warning text-white w-100" asp-controller="Apartment" asp-action="Update" asp-route-id="@item.Apartment.Id">
                            <i class="fa fa-pencil"></i>  Update Apartment
                        </a>
                        @if (String.IsNullOrEmpty(item.TenantName) == false)
                        {
                            <a class="btn btn-outline-info rotate" asp-controller="Bill" asp-action="Bill" asp-route-apartmentId="@item.Apartment.Id" asp-route-tenantName="@item.TenantName">Add Bill</a>
                        }
                        else
                        {
                            <a class="btn btn-outline-info rotate" onclick="addBillAlert()">Add Bill</a>
                        }

                    </div>
                </div>
            </div>
        }

    </div>

}