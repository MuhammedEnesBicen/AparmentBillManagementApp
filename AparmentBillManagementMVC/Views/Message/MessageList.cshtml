@model List<MessageDTO>


@{
    DateTime? date = null;
    int chatRoomId = ViewBag.chatRoomId ?? -1;
    int? lastSeenMessageId =(Model.Count>0)? Model?.Last()?.Id:null;

}
<span id="chatRoomIdSpan" value="@chatRoomId" hidden></span>
<span id="lastSeenMessageIdSpan" value="@lastSeenMessageId" hidden></span>

@if(Model is null || Model.Count==0)
{
    <p class="noMessage position-absolute top-50 start-50 translate-middle"> There is no message...</p>
}


@foreach (var item in Model)
{
    if (date is null || item.MessageTime.Day != date?.Day)
    {

        if (item.MessageTime.Day != DateTime.Today.Day)
        {
            <div class="d-flex justify-content-center messageDateDivider">
                <span class="badge rounded-pill bg-light text-dark">@item.MessageTime.ToString("dd MMMM yyyy")</span>
            </div>
        }
        else
        {
            <hr />
            <div class="d-flex justify-content-center pb-2 messageTodayDateDivider">
                <span class="badge rounded-pill bg-light text-primary ">Today - @DateTime.Today.ToString("dd MMMM yyyy")</span>
            </div>
        }

    }
    date = item.MessageTime;

    @await Html.PartialAsync("MessageItem", item)
}

@if (Model?.Count > 0 && Model.Last().MessageTime.Day != DateTime.Today.Day)
{
    <hr />
    <div class="d-flex justify-content-center pb-2 messageTodayDateDivider">

        <span class="badge rounded-pill bg-light text-primary ">Today - @DateTime.Today.ToString("dd MMMM yyyy")</span>

    </div>

}
